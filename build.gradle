plugins {
	id 'org.springframework.boot' version '2.6.1'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'com.qfunds'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-mongodb', version: '2.6.3'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.security:spring-security-test'
	// https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt
	implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'
	// https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
	implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'
// https://mvnrepository.com/artifact/javax.xml.bind/jaxb-api
	implementation group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.1'
// https://mvnrepository.com/artifact/org.glassfish.jaxb/jaxb-runtime
	implementation group: 'org.glassfish.jaxb', name: 'jaxb-runtime', version: '2.3.3'
	testImplementation 'org.apache.httpcomponents:httpclient'

}

test {
	useJUnitPlatform()
}

apply plugin: 'java-library'

jar {
	manifest {
		attributes(
				'Class-Path': configurations.runtimeClasspath.collect { it.getName() }.join(' '),
				'Main-Class': 'com.qfunds.qfundsbackend.QfundsBackendApplication'
		)
	}

	// You can reference any part of the dependency configurations,
	// and you can have as many from statements as you need
	from configurations.runtimeClasspath
	// I just copied them into the top of the jar, so it looks like the eclipse exported
	// runnable jar, but you could designate a lib directory, and reference that in the
	// classpath as "lib/$it.name" instead of it.getName()
	into ''
}